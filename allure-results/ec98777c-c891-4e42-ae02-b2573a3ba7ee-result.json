{"name": "test_smena_pr", "status": "broken", "statusDetails": {"message": "TypeError: TestChangePlan.test_wait_tariff() missing 1 required positional argument: 'type_case'", "trace": "driver = <appium.webdriver.webdriver.WebDriver (session=\"466d0590-c3d2-4a9f-a1c4-416f42a58cc7\")>, file_data = [{'balance': 2500, 'cycle': 'day', 'default': 'no', 'market': 'SCH', ...}]\napp_pages = <tests.conftest.app_pages.<locals>.Pages object at 0x000002B25C188C20>\n\n    @allure.feature(\"Тестирование тарифа UP\")\n    def test_smena_pr(driver, file_data, app_pages):\n        \"\"\"\n        Запускает тесты на основе данных из файла.\n        \"\"\"\n        # for row in file_data:\n        #     execute_scenario(driver, row, app_pages)\n    \n        for row in file_data:\n>           process_tariff_changes(driver, row, app_pages)\n\ntest_app_android\\project\\tests\\test.py:316: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndriver = <appium.webdriver.webdriver.WebDriver (session=\"466d0590-c3d2-4a9f-a1c4-416f42a58cc7\")>, row = {'balance': 2500, 'cycle': 'day', 'default': 'no', 'market': 'SCH', ...}\napp_pages = <tests.conftest.app_pages.<locals>.Pages object at 0x000002B25C188C20>\n\n    def process_tariff_changes(driver, row, app_pages):\n    \n        test_plan = TestChangePlan(row, app_pages)\n        # Проверка смены тарифного плана (ТП)\n        if row['old_tariff_soc'] != row['new_tariff_soc']:\n            with allure.step(f'Тест-кейс: смена тарифа \"{row['new_tariff_name']}\"'):\n                if row['balance'] <= 200:\n                    allure.step(f'Кейс: смена тарифа при недостаточности средств')\n                else:\n                    allure.step(f'Кейс: смена тарифа при параметрах: дефолт ({row[\"default\"]})\", ГБ ({row[\"new_gb_value\"]}), Минуты ({row[\"new_min_value\"]}), АП ({row[\"new_tariff_price\"]}), ДТМ ({row[\"new_options_name\"]} ,{row[\"new_options_price\"]})')\n                #Переход на страницу смены тарифа\n                test_plan.test_go_new_tariff()\n                #Выбираем тариф\n                test_plan.test_select_tariff(app_pages)\n                #Выбираем гб и минуты, если пресеты не дефолтные\n                if row['default'] == 'no':\n                    test_plan.test_select_data()\n                    test_plan.test_select_voice()\n    \n                #Проверка ДТМ (цена/подключение опции)\n                if not pd.isna(row['new_options_price']):\n                    if row['new_options_price'] > 0:\n                        test_plan.test_select_dtm(status = \"on\")\n                    else:\n                        test_plan.test_dtm_price()\n                #Проверка итоговой цены за тариф и переход далее\n                if row['old_tariff_soc'] == row['new_tariff_soc']:\n                    test_plan.test_tariff_price(name = 'Продолжить')\n                else:\n                    test_plan.test_tariff_price(name = 'подключить')\n                #Проверка предчека и переход далее\n                if not pd.isna(row['old_options_name']):\n                    test_plan.test_precheck(old_dtm_name = 1, changing_tariff = None)\n                #Проверка чека\n                #Проверка в чеке описания изменений тарифа (Текс/цена)\n                test_plan.test_check_mobile_price(text_part = '₽/мес')\n                #Проверка дтм опции в чеке (Имя/цена)\n                if not pd.isna(row['new_options_price']):\n                    test_plan.test_check_dtm(price = 1, text_part = '₽/мес', type_case = 'tariff')\n                #Проверка разового платежа за смену тарифа\n                test_plan.test_single_payment()\n                #Проверка цены на кнопке оплатить и переход далее\n                type_case = 'tariff'\n                test_plan.test_check_price(type_case)\n                test_plan.test_button_pay_click()\n                if row['balance'] <= 200:\n                    #Проверка при недостаточности средств\n                    test_plan.test_low_balance_page()\n                else:\n                    #Проверка экрана успеха и переход далее (возврат на главный экран)\n                    test_plan.test_success_page()\n                    test_plan.test_status_button_understand_click()\n                    test_plan.test_go_main()\n                    #Ожидание изменения тарифа на главном экране\n                    if row['new_gb_value'] > 0:\n                        param = 1 #проверяем по гб\n                    elif row['new_min_value'] > 0:\n                        param = 2 #проверяем по минутам\n                    else:\n                        param = 3   #проверяем по АП\n                    type_case = 'options'\n                    test_plan.test_wait_tariff(param, type_case)\n                    #Проверка данных тарифа поле подключения\n                    test_plan.test_ap_tariff(type_case = 'options')\n                    if row['new_gb_value'] > 0:\n                        test_plan.test_gb_tariff()\n                    if row['new_min_value'] > 0:\n                        test_plan.test_min_tariff()\n                    test_plan.test_name_tariff()\n                    test_plan.test_date_tariff()\n        # Проверка смены пресета/ подключение услуг\n        elif row['old_tariff_soc'] == row['new_tariff_soc']:\n            if (row['old_gb_value'] != row['new_gb_value']) or (row['old_min_value'] != row['new_min_value']):\n                with allure.step(f'Тест-кейс: смена пресета \"{row['new_tariff_name']}\"'):\n                    #Переходим в карточку тарифа\n                    test_plan.test_go_settings_tariff()\n                    #Подключаем ГБ и МИН если необходимо\n                    if row['old_gb_value'] != row['new_gb_value']:\n                        test_plan.test_select_data()\n                    if row['old_min_value'] != row['new_min_value']:\n                        test_plan.test_select_voice()\n                    #Проверка ДТМ (цена/подключение опции)\n                    if not pd.isna(row['old_options_price']) and not pd.isna(row['new_options_price']):\n                        if row['new_options_price'] > row['old_options_price']:\n                            test_plan.test_select_dtm(status = \"on\")\n                        else:\n                            test_plan.test_dtm_price()\n                    elif pd.isna(row['old_options_price']) and not pd.isna(row['new_options_price']):\n                        if row['new_options_price'] > 0:\n                            test_plan.test_select_dtm(status = \"on\")\n                        else:\n                            test_plan.test_dtm_price()\n                    elif not pd.isna(row['old_options_price']) and pd.isna(row['new_options_price']):\n                        test_plan.test_select_dtm(status = \"off\")\n                    #Проверка итоговой цены за тариф и переход далее\n                    if row['old_tariff_soc'] == row['new_tariff_soc']:\n                        test_plan.test_tariff_price(name = 'Продолжить')\n                    else:\n                        test_plan.test_tariff_price(name = 'подключить')\n                    #Проверка предчека и переход далее\n                    if (not pd.isna(row['old_options_name']) and pd.isna(row['new_options_name'])) and (row['old_gb_value'] > row['new_gb_value']):\n                        test_plan.test_precheck(old_dtm_name = 1, changing_tariff = 1)\n                    else:\n                        test_plan.test_precheck(old_dtm_name = None, changing_tariff = 1)\n                    #Проверка описания изменений тарифа (Текс/цена)\n                    if (row['new_gb_value'] <= row['old_gb_value']) and (row['new_min_value'] <= row['old_min_value']):\n                        test_plan.test_check_text(text_part = '₽')\n                    else:\n                        test_plan.test_check_mobile_price(text_part = '₽')\n                    #Проверка дтм опции в чеке (Имя/цена)\n                    if not pd.isna(row['old_options_price']) and pd.isna(row['new_options_price']) and (row['old_gb_value'] < row['new_gb_value']):\n                        test_plan.test_check_dtm(price = None, text_part = '₽', type_case = 'preset')\n                    elif (pd.isna(row['old_options_price']) and not pd.isna(row['new_options_price'])) or (row['old_options_price'] < row['new_options_price']):\n                        test_plan.test_check_dtm(price = 1, text_part = '₽', type_case = 'preset')\n                    test_plan.test_check_info(type_case = 'preset')\n                    #Проверка цены на кнопке оплатить и переход далее\n                    if (row['new_gb_value'] <= row['old_gb_value'] and row['new_min_value'] < row['old_min_value']) and pd.isna(row['new_options_price']):\n                        test_plan.test_button_save_click()\n                    else:\n                        type_case = 'preset'\n                        test_plan.test_check_price(type_case)\n                        test_plan.test_button_pay_click()\n                    #Проверка экрана успеха и переход далее (возврат на главный экран)\n                    test_plan.test_success_page()\n                    test_plan.test_status_button_understand_click()\n                    test_plan.test_go_main()\n                    #Ожидание изменения тарифа на главном экране\n                    if row['new_gb_value'] > 0:\n                        param = 1 #проверяем по гб\n                    elif row['new_min_value'] > 0:\n                        param = 2 #проверяем по минутам\n                    else:\n                        param = 3   #проверяем по АП\n>                   test_plan.test_wait_tariff(param,)\nE                   TypeError: TestChangePlan.test_wait_tariff() missing 1 required positional argument: 'type_case'\n\ntest_app_android\\project\\tests\\test.py:452: TypeError"}, "description": "\nЗапускает тесты на основе данных из файла.\n", "steps": [{"name": "Тест-кейс: смена пресета \"Тариф UP\"", "status": "broken", "statusDetails": {"message": "TypeError: TestChangePlan.test_wait_tariff() missing 1 required positional argument: 'type_case'\n", "trace": "  File \"C:\\Users\\verli\\IdeaProjects\\AppBee\\test_app_android\\project\\tests\\test.py\", line 452, in process_tariff_changes\n    test_plan.test_wait_tariff(param,)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^\n"}, "steps": [{"name": "Переход в карточку тарифа", "status": "passed", "steps": [{"name": "Клик по кнопке \"настройки тарифа\"", "status": "passed", "start": 1736854718337, "stop": 1736854719245}], "start": 1736854718337, "stop": 1736854719245}, {"name": "Ожидание загрузки страницы \"тариф up\"", "status": "passed", "start": 1736854719245, "stop": 1736854722619}, {"name": "Выбираем ГБ \"70\"", "status": "passed", "attachments": [{"name": "screenshot", "source": "01d8ba4f-b28b-4f39-8fa8-e91a2af561f6-attachment.png", "type": "image/png"}], "start": 1736854722619, "stop": 1736854724038}, {"name": "Выбираем МИН \"800\"", "status": "passed", "attachments": [{"name": "screenshot", "source": "7b8e6a8c-2ce4-48c1-ac4e-1d8d996bdb1f-attachment.png", "type": "image/png"}], "start": 1736854724038, "stop": 1736854725450}, {"name": "Скролл страницы вниз", "status": "passed", "start": 1736854725450, "stop": 1736854727569}, {"name": "Проверяем стоимость \"Сервисы Яндекс\"", "status": "passed", "attachments": [{"name": "Значения цен", "source": "2abf8873-4315-4fa4-bb7d-c56a436d7a1d-attachment.txt", "type": "text/plain"}], "start": 1736854727570, "stop": 1736854729759}, {"name": "Проверяем стоимости на кнопке \"Продолжить\"", "status": "passed", "attachments": [{"name": "Значения цен", "source": "b55ef11b-04f5-4950-87e2-b7c1fda19bac-attachment.txt", "type": "text/plain"}, {"name": "screenshot", "source": "80f94d66-72b2-4dab-b56a-6d5f55378de4-attachment.png", "type": "image/png"}], "start": 1736854729759, "stop": 1736854730839}, {"name": "Клик по кнопке \"Продолжить\"", "status": "passed", "steps": [{"name": "Клик по кнопке \"Продолжить\"", "status": "passed", "start": 1736854730840, "stop": 1736854730964}], "start": 1736854730840, "stop": 1736854730964}, {"name": "Ожидание страницы предчека", "status": "passed", "attachments": [{"name": "screenshot", "source": "93bd1c64-3ab9-4a10-86dc-e92a508ec827-attachment.png", "type": "image/png"}], "start": 1736854730964, "stop": 1736854736422}, {"name": "Проверка описания изменений тарифа в предчеке", "status": "passed", "attachments": [{"name": "Текст изменений тарифа", "source": "26bed3f5-460a-42db-84fe-8e48c6871491-attachment.txt", "type": "text/plain"}], "start": 1736854736422, "stop": 1736854736544}, {"name": "Переход в чек", "status": "passed", "start": 1736854736544, "stop": 1736854736631}, {"name": "Ожидание чека \"Тариф UP\"", "status": "passed", "start": 1736854736631, "stop": 1736854737251}, {"name": "Проверка стоимости мобильной связи", "status": "passed", "steps": [{"name": "Проверка описания мобильной связи в чеке", "status": "passed", "attachments": [{"name": "Текст изменений тарифа в чеке", "source": "16efff57-194a-4fa8-9264-b6b2aa4a123c-attachment.txt", "type": "text/plain"}], "start": 1736854737252, "stop": 1736854737369}], "attachments": [{"name": "Значения цен", "source": "b0654b10-9fe1-4fee-a683-9fffe4d610c9-attachment.txt", "type": "text/plain"}], "start": 1736854737252, "stop": 1736854737519}, {"name": "Проверка описания в тултипе info", "status": "failed", "statusDetails": {"message": "AssertionError: Ошибка: текст не совпадает\nДолжно: 'Сейчас будут предоставлены новые 70 ГБ и 800 минут, и спишется плата за 30 дней в размере 1239 ₽.'\nПолученное: 'Сейчас будут предоставлены новые 70 ГБ и 800 минут, и спишется плата за 30 дней в размере 1170 ₽.'\n", "trace": "  File \"C:\\Users\\verli\\IdeaProjects\\AppBee\\test_app_android\\project\\pages\\check_page.py\", line 119, in info_text\n    assert str(name) == str(element), f'Ошибка: текст не совпадает\\nДолжно: {repr(name)}\\nПолученное: {repr(element)}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "attachments": [{"name": "screenshot", "source": "9e0843b1-10db-4d7a-938c-eb78652817c0-attachment.png", "type": "image/png"}, {"name": "Текст изменений тарифа", "source": "8cdb868f-7def-4e9d-a1f3-1550921c06ec-attachment.txt", "type": "text/plain"}, {"name": "Ошибка, при проверке текста изменений тарифа", "source": "05ebff89-bfe4-4790-b164-4cdf1f69018d-attachment.txt", "type": "text/plain"}, {"name": "Скриншот", "source": "c3ce2899-9f3b-4a79-aeb4-dd00b2136d77-attachment.png", "type": "image/png"}], "start": 1736854737519, "stop": 1736854739307}, {"name": "Клик по кнопке \"понятно\"", "status": "passed", "steps": [{"name": "Клик по кнопке \"понятно\"", "status": "passed", "start": 1736854739309, "stop": 1736854739399}], "start": 1736854739309, "stop": 1736854739399}, {"name": "Проверка стоимости на кнопке \"Оплатить\"", "status": "passed", "attachments": [{"name": "Значения цен", "source": "46606bdf-99bc-48a1-aa80-8e2bde503ab8-attachment.txt", "type": "text/plain"}], "start": 1736854739399, "stop": 1736854740357}, {"name": "Клик по кнопке \"Оплатить\"", "status": "passed", "steps": [{"name": "Клик по кнопке \"Оплатить\"", "status": "passed", "start": 1736854740357, "stop": 1736854741434}], "start": 1736854740357, "stop": 1736854741434}, {"name": "Проверка страницы успеха", "status": "passed", "attachments": [{"name": "screenshot", "source": "8b85827a-6a69-4aa9-b6cc-9d8b2214bbd8-attachment.png", "type": "image/png"}], "start": 1736854741435, "stop": 1736854747332}, {"name": "Клик по кнопке понятно", "status": "passed", "steps": [{"name": "Клик по кнопке \"понятно\"", "status": "passed", "start": 1736854747332, "stop": 1736854747446}], "start": 1736854747332, "stop": 1736854747446}, {"name": "Переход на стартовую страницу", "status": "passed", "start": 1736854747446, "stop": 1736854750069}], "attachments": [{"name": "Ошибка", "source": "58cebb50-c224-47e0-9700-586d4e40fdd6-attachment.txt", "type": "text/plain"}], "start": 1736854709827, "stop": 1736854750069}], "attachments": [{"name": "stdout", "source": "3c99ead0-d8aa-4442-bd8b-44c2a2ecb786-attachment.txt", "type": "text/plain"}], "start": 1736854709827, "stop": 1736854750070, "uuid": "2b1b49ae-324c-4d1c-a322-e96e854a9e26", "historyId": "7e317dec957f8d84ca3cc6ce5c1ea4ff", "testCaseId": "7e317dec957f8d84ca3cc6ce5c1ea4ff", "fullName": "test_app_android.project.tests.test#test_smena_pr", "labels": [{"name": "feature", "value": "Тестирование тарифа UP"}, {"name": "parentSuite", "value": "test_app_android.project.tests"}, {"name": "suite", "value": "test"}, {"name": "host", "value": "DESKTOP-G72BB0H"}, {"name": "thread", "value": "10768-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_app_android.project.tests.test"}]}